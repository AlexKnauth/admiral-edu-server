Captain Teach URL API version 0.1

Types:

  Class_Record:
      { "id" : Unique_Id, "name" : String }

  Student_Record:
      { "id" : Unique_Id, "display-name" : String }

  Assignment_Record:
      { "id" : Unique_Id,
        "name" : String,
        "class_id" : Unique_Id, 
	"description" : AssignmentDescription }

  Rubric

  Review
    { "url" : URL,
      "rubric" : Rubric }
	

Classes

  POST /class/list
  Retrieves a list of class records

    On Success:
      { "response" : 
        { "classes" : [Class_Record, ...] }}

  POST /class/new
  Creates a record with the class name and assigns to it a unique id.
  
    Body: Class_Record

    On Success:
      { "response" : { "message" : "Class created." } }

  POST /class/delete
  Deletes the specified class

    Body: { "class_id" : Unique_Id }

    On Success:
      { "response" : { "message" : "Class deleted." } }

  POST /class/students
  Requests a list of students registered in the specified class.

    Body: { "class_id" : Unique_Id }

    On Success:
      { "response" : { "class" : Class_Record,
      		       "students" : [Student_Record, ...] }}

Students

  POST /student/new
  Creates a new student record.

    Body: Student_Record
    
    On Success:
      { "response" : { "message" : "Student created." } }

  POST /student/register
  Registers a student in the specified class

    Body:
      { "student_id" : Unique_Id, "class_id" : Unique_Id }

    On Success:
      { "response" : { "message" : "Student registered." } }

  POST /student/classes
  Returns a list of classes the specified student is registered in

    Body:
      { "student-id" : Unique_Id }

    On Success:
      { "response" : { "student" : Student_Record,
      		       "classes" : [Class_Record, ...] }}

Assignments

  POST /assignment/new 
  Creates a new assignment  

    Body: Assignment_Record

    On Success: 
      { "response" : { "message" : "Assignment created." } }      

  POST /assignment/list
  Returns a list of assignments for the specified class

    Body:
      { "class_id" : Unique_Id }

    On Success:
      { "response" : 
        { "class" : Class_Record,
	  "assignments" : [Assignment_Record, ...] } }

  POST /assignment/delete
  Deletes the specified assignment for the specified class

    Body:
      { "class_id" : Unique_Id, "assignment_id" : Unique_Id }

    On Success:
      { "response" : { "message" : "Assignment deleted." }}

  POST /assignment/submit
  Submits the specified step of an assignment for a particular student.

    Body:
      { "student_id" : Unique_Id,
        "assignment_id" : Unique_Id,
	"submission_step" : String,
	"submission_url" : URL }

    On Success:
      { "response" : { "message" : "Assignment submitted." }}

      Create a submission record associating with the student_id, assignment_id,
      submission_step, and submission_url. If this submission_step is a review
      step, this will also create a review record that is pending review.

  POST /assignment/status
  Returns the current status of a student on a particular assignment.

    Body:
      { "student_id" : Unique_Id,
      	"assignment_id" : Unique_Id }

    On Success:
      { "response" : { "completed_steps" : [String],
      		       "pending_review" : Bool,
      		       "next_step" : String }}

      Note: It feels like there should be an elegant way to roll assignment
      	    submissions and review submissions into a single thing to avoid
	    the pending_review. The next_step would simply refer to a review
	    process. Any ideas?

Reviews

  POST /review
  Retrieve a review to be completed by the specified student for the
  specified assignment at the specified review_step.

    Body:
      { "student_id" : Unique_Id,
        "assignment_id", Unique_id,
	"review_step", String }

    On Success:
      { "response" : { "review" : Review } }

  POST /review/status
  Retrieve the current review status for the specified student and
  assignment.

    Body:
      { "student_id" : Unique_Id,
        "assignment_id", Unique_id }

    On Success:
      { "response" : { "completed_steps" : [String],
      		       "pending_submission" : Bool,
		       "next_step" : String }}

  POST /review/submit
  Submits a review by the specified student for the specified assignment
  and review step.

    Body:
      { "student_id" : Unique_Id,
        "assignment_id" : Unique_id,
	"review_step" : String,
	"rubric" : Rubric }

    On Success:
      { "response" : { "message" : "Review submitted." } }

      Update the associated review record to be complete. In addition to this
      update the reviewing students assignment record to indicate their where
      they are in the assignment. This will enable them to move to the next
      review_step or submission_step.

